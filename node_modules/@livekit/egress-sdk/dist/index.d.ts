/**
 * Copyright 2023 LiveKit, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Room } from 'livekit-client';
declare const EgressHelper: {
    /**
     * RoomComposite will pass URL to your livekit's server instance.
     * @returns
     */
    getLiveKitURL(): string;
    /**
     *
     * @returns access token to pass to `Room.connect`
     */
    getAccessToken(): string;
    /**
     * the current desired layout. layout can be changed dynamically with [Egress.UpdateLayout](https://github.com/livekit/protocol/blob/main/livekit_egress.proto#L15)
     * @returns
     */
    getLayout(): string;
    /**
     * Call when successfully connected to the room
     * @param room
     */
    setRoom(room: Room): void;
    /**
     * Starts recording the room that's passed in
     */
    startRecording(): void;
    /**
     * Finishes recording the room, by default, it'll end automatically finish
     * when all other participants have left the room.
     */
    endRecording(): void;
    /**
     * Registers a callback to listen to layout changes.
     * @param f
     */
    onLayoutChanged(f: (layout: string) => void): void;
};
export default EgressHelper;
