import type { Session } from '../../../types/src';
export type UniversalIdentityProps = {
    token: Session;
    onSkip: () => void;
    onSubmit: () => void;
};
export type SuccessUniversalIdentityProps = {
    onDone: () => void;
};
export type InstantVerifyProps = {
    onBoarding: any;
    session: Session;
    onFinish: (remainingModules: string[]) => void;
    logoSrc?: string;
};
export type InstantVerifyConsentProps = {
    token: string;
    onBoarding: any;
    onFinish: () => void;
    logoSrc?: string;
};
export declare const instantVerifyScope: {
    readonly NAME: "NAME";
    readonly DATE_OF_BIRTH: "DATE_OF_BIRTH";
    readonly EMAIL: "EMAIL";
    readonly PHONE: "PHONE";
    readonly ADDRESS: "ADDRESS";
};
export type InstantVerifyScope = keyof typeof instantVerifyScope;
export type InstantVerifyPrivacyData = {
    id: InstantVerifyScope;
    icon: string;
    text: string;
    alt: string;
};
export type DeclineSharingModalProps = {
    isOpen: boolean;
    onClose: (declined?: boolean) => void;
};
