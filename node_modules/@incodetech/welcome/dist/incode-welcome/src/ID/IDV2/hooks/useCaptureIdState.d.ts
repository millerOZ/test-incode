import type { IdErrorDetail, IdFlowStep, IdSuccessData, OnboardingError } from '../state/idFlowTypes';
export declare const useCaptureIdState: () => {
    token: string;
    currentStep: IdFlowStep;
    flowOutcome: "error" | "success" | "pending";
    isLoading: boolean;
    errorDetails: IdErrorDetail;
    successData: IdSuccessData;
    attempts: number;
    maxAttempts: number;
    uploadId: any;
    emitError: (errorData: OnboardingError | IdErrorDetail | Error | string) => void;
    reset: () => void;
    canRetry: () => boolean;
    getAttempts: () => number;
    getMaxAttempts: () => number;
    completeFlow: (data: IdSuccessData) => void;
    goToChooser: () => void;
    goToIdStep: () => void;
    goToPassportStep: () => void;
    goToPermissions: () => void;
    changeStep: (step: IdFlowStep) => void;
    isRecordingEnabled: boolean;
    shouldShowTutorial: boolean;
};
