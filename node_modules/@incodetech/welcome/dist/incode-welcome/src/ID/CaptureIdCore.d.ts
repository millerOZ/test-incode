import type { Flow } from '../../../types/src';
import type { LooseSession } from '../../../types/src';
import { BaseCaptureCore } from './BaseCaptureCore';
type StepKey = keyof typeof steps;
export declare const idHorizontalFrame = "644650346f9f47edf1ca6b31";
export declare const idVerticalFixedFrame = "6454d6700f14f9356f208730";
declare const steps: {
    readonly chooser: {
        readonly component: () => import("react/jsx-runtime").JSX.Element;
        readonly api: any;
    };
    readonly front: {
        readonly component: () => import("react/jsx-runtime").JSX.Element;
        readonly api: any;
    };
    readonly passport: {
        readonly component: () => import("react/jsx-runtime").JSX.Element;
        readonly api: any;
    };
    readonly mandatoryConsent: {
        readonly component: () => import("react/jsx-runtime").JSX.Element;
        readonly api: any;
    };
    readonly back: {
        readonly component: () => import("react/jsx-runtime").JSX.Element;
        readonly api: any;
    };
    readonly manualIdUpload: {
        readonly component: () => import("react/jsx-runtime").JSX.Element;
        readonly api: any;
    };
    readonly end: {
        readonly component: () => any;
        readonly api: any;
    };
};
declare class CaptureIdCore extends BaseCaptureCore {
    static instance: CaptureIdCore | null;
    steps: {
        readonly chooser: {
            readonly component: () => import("react/jsx-runtime").JSX.Element;
            readonly api: any;
        };
        readonly front: {
            readonly component: () => import("react/jsx-runtime").JSX.Element;
            readonly api: any;
        };
        readonly passport: {
            readonly component: () => import("react/jsx-runtime").JSX.Element;
            readonly api: any;
        };
        readonly mandatoryConsent: {
            readonly component: () => import("react/jsx-runtime").JSX.Element;
            readonly api: any;
        };
        readonly back: {
            readonly component: () => import("react/jsx-runtime").JSX.Element;
            readonly api: any;
        };
        readonly manualIdUpload: {
            readonly component: () => import("react/jsx-runtime").JSX.Element;
            readonly api: any;
        };
        readonly end: {
            readonly component: () => any;
            readonly api: any;
        };
    };
    currentStep: StepKey | null;
    flow: Flow | null;
    private constructor();
    static getInstance(): CaptureIdCore;
    setup(session: LooseSession): void;
    getFlow(): Flow | null;
    handleFlowConfiguration(flow: Flow): void;
    changeStep(step: StepKey): void;
    getStepComponent(): {
        readonly component: () => any;
        readonly api: any;
    };
    reset(): void;
}
export default CaptureIdCore;
