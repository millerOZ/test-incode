import type { LooseSession } from '../../../types/src';
import { FC } from 'react';
export declare const Question: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, never>, "ref"> & {
    ref?: import("react").Ref<HTMLParagraphElement>;
}, never>> & string;
declare global {
    interface Window {
        OT: any;
    }
}
type SpeechMaskType = {
    onNext: (success: boolean) => void;
    speechToTextCheck: boolean;
    stopRecording: (cb: () => void) => void;
    token: LooseSession;
    stream: MediaStream;
    numberOfTries: number;
    sound: number;
};
declare const SpeechMask: FC<SpeechMaskType>;
export default SpeechMask;
