import type { IncodeCanvas } from '../../camera/IncodeCanvas';
import type { FaceCoordinates } from '../../detection/detectFace';
export declare const FACE_ERROR_CODES: {
    readonly LIVENESS: "LIVENESS_ERROR";
    readonly BRIGHTNESS: "BRIGHTNESS_ERROR";
    readonly LENSES: "LENSES_ERROR";
    readonly MASK: "MASK_ERROR";
    readonly CLOSED_EYES: "CLOSED_EYES_ERROR";
    readonly HEAD_COVER: "HEAD_COVER_ERROR";
    readonly SERVER: "SERVER_ERROR";
    readonly FACE_NOT_FOUND: "FACE_NOT_FOUND";
    readonly MULTIPLE_FACES: "MULTIPLE_FACES";
    readonly TOO_BLURRY: "TOO_BLURRY_ERROR";
    readonly TOO_DARK: "TOO_DARK_ERROR";
};
export type SendFaceImageError = Error & {
    message: (typeof FACE_ERROR_CODES)[keyof typeof FACE_ERROR_CODES];
};
export type SendFaceImageResponse = {
    confidence: number;
    isBright: boolean;
    hasLenses: boolean;
    hasFaceMask: boolean;
    hasClosedEyes: boolean;
    hasHeadCover: boolean;
};
export declare const sendFaceImage: ({ canvas, faceCoordinates, sessionToken, }: {
    canvas: IncodeCanvas;
    faceCoordinates?: FaceCoordinates;
    sessionToken: string;
}) => Promise<SendFaceImageResponse>;
