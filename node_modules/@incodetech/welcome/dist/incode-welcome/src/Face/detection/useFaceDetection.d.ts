import { IncodeCanvas } from '../../camera/IncodeCanvas';
import type { FaceCoordinates } from '../../detection/detectFace';
import { type BorderState, type DetectionState } from './DetectionManager';
type UseFaceDetectionProps<T = any, E = Error> = {
    getCanvas: () => IncodeCanvas | undefined;
    onCapture: (canvas: IncodeCanvas, faceCoordinates: FaceCoordinates) => Promise<T>;
    onFinish?: (result: T) => void;
    onError?: (error: E) => void;
};
export declare const useFaceDetection: <T = any, E = Error>({ getCanvas, onCapture, onFinish, onError, }: UseFaceDetectionProps<T, E>) => {
    detectionState: DetectionState;
    borderState: BorderState;
    startDetection: () => void;
    stopDetection: () => void;
};
export {};
