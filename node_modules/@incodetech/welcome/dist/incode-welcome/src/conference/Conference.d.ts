export const ModalTitle: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, never>> & string;
export const ModalButton: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").ButtonHTMLAttributes<HTMLButtonElement> & {
    theme?: import('../../../types/src').IncodeTheme;
}, never>> & string & Omit<({ theme, onClick, disabled, className, ...props }: import("react").ButtonHTMLAttributes<HTMLButtonElement> & {
    theme?: import('../../../types/src').IncodeTheme;
}) => import("react/jsx-runtime").JSX.Element, keyof import("react").Component<any, {}, any>>;
export const DisconnectButton: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<Omit<import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, never>, "ref"> & {
    ref?: import("react").Ref<HTMLButtonElement>;
}, never>> & string;
declare const _default: import("@incodetech/opentok-react/node_modules/@types/react").ComponentType<import("@incodetech/opentok-react").PreloadScriptProps>;
export default _default;
