export type IdentifyResponse = {
    spoofAttempt: boolean;
    faceMatch: boolean;
    token: string;
    customerId: string;
    interviewId: string;
    base64Image: string;
    secondFactor: boolean;
    transactionId: string;
    hasLenses: boolean;
    hasFaceMask: boolean;
    error?: {
        error?: string;
        path?: string;
        status?: number;
        timestamp?: number;
    };
};
export type LoginProps = {
    onError: (params: Error | {
        status: number;
        message: string;
    } | string) => void;
    onSuccess: (response: IdentifyResponse) => void;
    onCapture?: (imageBase64: any, faceCoordinates: any) => void;
    timeout?: number;
    stopAtAccessDenied?: boolean;
    stopAtError?: boolean;
    isOneToOne?: boolean;
    oneToOneProps?: {
        phone?: string;
        email?: string;
        authReference?: string;
        identityId?: string;
        nationalNumber?: string;
    };
    accessDeniedNotificationText?: string;
    token?: string;
    isInstantVerify?: boolean;
    showCustomCameraPermissionScreen?: boolean;
    isKiosk?: boolean;
    deviceId?: string;
    recordingsToken?: string;
    hatCheckEnabled?: boolean;
    lensesCheckEnabled?: boolean;
    maskCheckEnabled?: boolean;
    eyesClosedCheckEnabled?: boolean;
};
