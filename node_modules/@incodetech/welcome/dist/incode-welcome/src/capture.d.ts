export declare const frontType = "front";
export declare const backType = "back";
export declare const selfieType = "selfie";
type CaptureParams = {
    type: 'front' | 'back' | 'selfie';
    token: string;
    image: string | Blob;
    onProgress?: (...props: unknown[]) => void;
    sendBase64?: boolean;
    isRetry?: boolean;
    isSecondId?: boolean;
    onlyFront?: boolean;
    encrypted?: boolean;
    imageType?: string;
    faceCoordinates?: unknown;
    glare?: number;
    sharpness?: number;
    shouldSkipGlareBack?: boolean;
    shouldSkipGlareFront?: boolean;
    captureType?: string;
    shouldAddGlare?: boolean;
    recordingId?: string;
    metadata: string;
};
export type UploadFrontIdResponse = {
    sharpness: number;
    correctSharpness: boolean;
    glare: number;
    correctGlare: boolean;
    horizontalResolution: number;
    classification: boolean;
    readability: boolean;
    typeOfId: string;
    issueYear: number;
    issueName: string;
    curpCheck: boolean;
    sessionStatus: string;
    countryCode: string;
    state: string;
    skipBackIdCapture?: boolean;
    skipGlareFront?: boolean;
    skipGlareBack?: boolean;
    documentIsOnTheEdge?: boolean;
};
declare function capture({ type, ...props }: CaptureParams): Promise<any>;
export default capture;
