/**
 * OvWebSocket class for managing a WebSocket connection.
 * @hidden
 */
export declare class OvWebSocket {
    private url;
    private roomName;
    private roomSid;
    private connectionId;
    private platform;
    private socket;
    constructor(url: string, roomName: string, roomSid: string, connectionId: string, platform: string);
    connect(): Promise<void>;
    /**
     * Close the WebSocket connection.
     */
    close(): void;
    /**
     * Emit a WebSocket event.
     * @param event - The event name.
     * @param data - The data to send.
     */
    emitEvent(event: string, data: any): void;
    /**
     * Set up a callback for a WebSocket event.
     * @param event - The event name.
     * @param callback - The callback function to execute when the event occurs.
     */
    onEvent(event: string, callback: (data: any) => void): void;
    requestAnswer(method: string, params: any, callback: (err: any, res: any) => void): void;
}
